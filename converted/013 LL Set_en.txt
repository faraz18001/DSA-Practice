Okay, so let's do our set method and set is going to look like this.
The first thing I want to point out about set is we can't actually call it set.
I call it set value.
Here, set is a key word in Python, so I can't use that as a method name.
So let's bring up a linked list like this.
So what we're going to do is set is we're going to have a variable that will iterate through to a particular
index and then we'll change the value.
So let's say we pass this method, the index of one and a value of four.
Then temp is going to go here.
And then we change that value to four.
I'm going to go ahead and change this.
Back to three for now.
But now that you have an idea of what we're doing here, if you want to code this, go ahead and pause
the video here.
And now I'm going to get in to the code.
So this variable temp, we're going to declare this like this.
In order to get temp to point at the appropriate node, you may have noticed is very similar to get.
We're going to iterate through and get to a particular node if the index is out here.
Obviously, we can't set a value there.
We can't set a value here.
So we can use all of that code that we used in get to test to see if the index is valid or to have temp
point to the appropriate node.
Or we can do something like this.
We'll just say temp is equal to self.
Get past the git method of the index and then have temp point to the appropriate node.
And this is the first time that we've seen that we can use another method inside of a method that we're
building.
Now, when we set temp equal to the git method for that index.
Get is going to return one of two things.
It is either going to return none if it's an invalid index.
Or.
It's going to return a node.
So the first thing we have to do is test to see is this pointing to a node.
Or is temp equal to none?
So we'll say if temp.
And you could write this as if temp is not none that might be easier to read.
I went for the more concise version here.
That means that it is pointing to a node and it's not pointing to none.
We'll say temp dot value equals value.
This is the value that we pass the method.
And we had previously said that this value would be four, so we'll change that value to four.
And then we will return true.
If the JIT method returns none, it's an invalid index, then we will return false.
Which is to say this If statement won't run, we will bypass that and go directly to returning false.
So that is our set value method.
It's very concise because most of the code for this is in the JIT method.
Then we're just testing to see what that method returned.
So we'll look at this code in a moment.
In VTS code.
And we will build this same linked list that we've been using in this video.
Then we will run the set value method with an index of one and a value of four, which will change this
node.
Okay, so let's flip over to VTS code.
So there is our set value method and this creates that linked list with 11, three, 23 and seven.
So let's just print that list out.
And we have 11, three, 23 and seven.
Okay.
So what I'm going to do is in between this creation of the link list and this print list right in between.
I'm going to paste this line here.
So this is going to set the value at the index of one to be four.
And then after that, we will print out the list and we should see that change in the list that is printed
out.
And you can see up here that the item at the index of one.
Has been changed to four.
So it looks like we have a working method.
Four set.
