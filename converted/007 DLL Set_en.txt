Okay, let's do our set method.
And remember, set is actually a key word in Python.
So I called mine set value.
We passed it an index and then we change the value of the node at that index.
So if you want to code this, pause it here.
Otherwise, I will get into this.
So we'll bring up our doubly linked list like this.
So the first thing we have to do is have a variable that's going to iterate through this list and get
to the node that we're going to change.
If we're going to change the node at the index of one from a three to a four, we have to get temp over
there.
And I'm just going to change this back to a three for now.
But just like with a singly linked list.
We're going to do it like this.
Temp equals self get and we're going to pass this in index and that's going to have temp point to the
correct node.
Now this code looks the same, but remember the JIT method is written differently for a doubly linked
list.
We have that efficiency where we can start at the other end and go backwards if it's in the second half
of the list.
So the git method is going to do one of two things.
It is either going to have temp point to the node that we're looking for or it is going to return none
because the index is out of range.
So we have to test this with an if statement to see is temp equal to none?
Or is it pointing at a node?
So we'll say if temp.
And you could do this as if temp is not none.
Value equals value, the value that we pass the set value method.
In this case, we passed it a four and that's going to update that three to a four.
And then we'll return true that we were able to change this.
So if temp is not pointing to a node, the condition and the if statement is going to be false, we
will skip that.
And then we're going to return false.
And that is our set value method.
And this is the first one in doubly linked lists.
Where there isn't a single line of code that is different from the singly linked list to the doubly
linked list.
There is a difference in how this will run because they get method that we're calling is written differently.
But as far as the actual code, this is identical.
So we'll look at this code in a moment in VTS code.
We'll build this doubly linked list and we'll change that value from a three to a four.
All right.
So let's have a look at this in VW's code.
So there is our set value method and this creates that linked list with 11, three, 23 and seven.
And this is going to print that list.
So let's run this.
And there is 11, three, 23 and seven.
So I'm going to come down here.
And in between our creation of our link list and our print list statement.
I'm going to paste in my doubly link list and then we're going to set value at the index of one and
change it to a four.
And then we'll print the list again here.
And this should be 11 for 23 and seven.
So let's run this.
And there is 11 for 23 and seven.
All right.
That is our method.
Four set.
