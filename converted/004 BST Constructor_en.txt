Now let's build our binary search tree constructor.
The first thing we'll need to do is build a node.
And remember, this node is going to look something like this.
So the constructor.
Is going to look like this value left and right.
And once we have this, we can start building our binary search tree.
We'll start the constructor out like this, and I'm just going to focus in just on the constructor like
this.
We pass it a value and we use that to create a node like that.
So to explain what we're going to do in the next line of code here.
I'm going to make this part of a tree like this.
Each node needs to have something pointing to it, and every node in this tree has something pointing
to it except that first node.
So we saw this concept with linked lists.
If you're going to have a linked list, you have to have something pointing to the first node because
that's the only way you have a way of getting to that node.
So in a tree we have something similar.
We don't call it head, we call it root.
So we have to create this root variable.
So we're going to say self route equals new node.
And we're not going to keep track of the length in a tree.
So this is a working binary search tree constructor.
But I want to teach a different concept here.
So I'm going to remove the code here.
And we're making the assumption when we build this binary search tree, that we're going to create this
with the first node at the time that we build the tree.
And you don't have to do it that way.
We've done it that way on all of the data structures so far, but you could just create this where root
is equal to none.
You create an empty tree and when you add the first item, you add it with the insert method, you don't
add it at the time that you create the tree or the linked list or whatever you're building.
So what I'm going to do is I'm going to bring this code back and change it where it creates an empty
tree at the time that we run the constructor.
So I'll go through this line by line.
So in the first line we passed this a value.
The only reason we did that was to create that first node, so now we can remove that.
The second line all this does is create a node so we can remove that.
So this last line self route equals new node.
We're going to change that to be equal to none.
Now that becomes our entire constructor for initializing a binary search tree.
Now let's bring back where it said class binary search tree.
And let's go look at this in VTS code.
So there is our class for our node there, and that has value left and right.
And this is our class for our binary search tree.
And then for our binary search tree, that is the entire constructor there.
Then we're going to create a new binary search tree called My Tree.
And then down here, we'll just print out my tree root.
And it should return none, because up here we said that self route was going to be equal to none.
So I'm going to run this and that returns none.
All right, That is our binary search tree constructor.
