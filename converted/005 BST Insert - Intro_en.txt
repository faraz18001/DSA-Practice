In this video, we're going to walk through the steps to create the insert method.
Then in the next video, we'll take those steps and walk through them and actually create the code.
So I'm going to bring up our binary search tree like this, and we're going to insert this node.
And obviously that's going to fit right there.
But let's walk through the steps that you would have to go through to be able to write the code to figure
out that it does go there.
So the first step would be to create a new node.
So what I'm trying to do in this video is go through the steps that you would go through if you took
out a piece of paper and said, okay, I'm going to figure out all of the steps to insert a node into
a binary search tree.
So the left is essentially our piece of paper that we're taking notes on.
So in order to have more room for that, I'm going to move our tree over like this.
And now the next step, we need to compare that new node with a value of 27 to this node here.
And if the node we're adding is less than we're going to go left and if it's greater than we're going
to go right.
So let's add this to our notes over here.
If it's less than we're going to go left, else it's greater than and we're going to go right.
And obviously, in this case, we're going to go to the left.
And when we do, there are two possibilities.
Either there is a node in that spot to the left like we have here, or there isn't.
And if there isn't, we can just insert it right there.
So if to the left of the 47 is equal to none will insert it.
But if it isn't, then we need to come down here and do the whole process again.
So we could say if the direction we're going is none.
That will insert the new node.
Else will move to the next node.
So now we're going to compare our new node to this node, the 21 node.
So we're going to do this again.
If it's less than we go left or else it's greater than and we go right.
So in this case, that's going to be to the right.
And when we go to the right, we have to determine.
Is that spot empty is 21 right?
Equal to none.
If it is, we're going to insert it.
And in this case it is.
So the thing that should jump out at you is that we did these two lines of code for this node and then
we did it for this node.
So that is an indication that these two lines of code should be inside of a loop.
And because we don't know how many times we're going to be iterating through the tree, this cannot
be a for loop.
It has to be.
A while loop.
Now, as we were iterating through this tree, we had this arrow that was pointing at the node that
we would compare the new node to.
So we need to name this arrow.
We're going to call this temp and then it will move through the tree and we will compare new node to
temp.
So I'll bring this up here.
We need to have this start at the top of the tree.
So we'll set it equal to root.
And we need to declare this variable before we ever get into that while loop.
So we'll need to put this above that.
So these steps right here cover most of our situations, but we do have a couple of edge cases.
The first one being if we have an empty tree, if this happens, we'll just set root equal to the new
node like this.
And in this situation, we don't need to go through the while loop.
We don't even need the temp variables so we can put this above the temp variable like this.
If root equals none, then we'll set root equal to the new node.
So let's bring our tree back like this.
And we do have one other edge case.
And to show this, I'm going to replace our 27 node.
With a 76.
So if we're going to insert this, we'll start at the 47 and then we go, right?
And now we have a problem.
You can't have this be equal to a node that we already have in the tree.
All of our code that we've written is less than go left and greater than go right.
There is nothing in there for equal to.
You cannot have duplicates.
The new node that we're inserting needs to be compared to each node as we're moving through the tree.
So this has to go inside of our while loop.
If the new node is ever equal to temp.
In other words, the next node that we're comparing it to.
At any time we're going to return false.
And that is the last step that we need to write down.
So what we're going to do is we're going to pick up right here in the next video and we're going to
use these steps to code our insert method.
But for now, those are the steps for insert.
