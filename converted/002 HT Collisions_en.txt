So now let's talk about collisions.
So let's bring up an address space here and bring in some key value pairs like this.
So a collision happens when you put a key value pair at an address where there was already a key value
pair.
So in the last video we talked about, how is it that we have a second key value pair go in at this
address without overwriting the last one?
And the way we're going to do that is both of these key value pairs exist within another list at that
address of two.
But for the sake of keeping this a little cleaner, I'm just putting them in here like this.
So this technique of dealing with collisions where you just put them at the same address is called separate
chaining.
So in another popular way of dealing with collisions, if we already have a key value pair at the address
that this maps to.
What you do is you go down until you find an empty address and you put the key value pair there.
And then if you have another one, you're going to keep going until you find an empty spot like this.
And then store this.
This is called linear probing.
And that is a form of open addressing.
And there are a lot of ways to do this with open addressing.
Linear probing is just one of them.
But this makes it where you don't have more than one key value pair at any address.
So separate chaining is what we're going to do in this course.
So I'm going to take these.
I'm going to move them up.
And this is what it's going to look like when we do this.
Now another way of doing separate chaining let's remove these is instead of having lists that are all
stored at that address and our list is we can have linked lists at those addresses like this.
And then say you're going to look for paint.
You go to the address of two and then you would iterate through the length list until you find it.
But I'm going to bring these back since this is the way we're going to do it.
And that is a few different ways of dealing with collisions.
